[package]
name = "gnostr-types"
version = "0.7.5"
edition = "2021"
authors = ["gnostr <admin@gnostr.org>", "Mike Dilger <mike@mikedilger.com>"]
description = "Types for nostr protocol handling"
repository = "https://github.com/gnostr-org/gnostr-types.git"
homepage = "https://github.com/gnostr-org/gnostr-types"
documentation = "https://docs.rs/gnostr-types"
readme = "README.md"
keywords = ["nostr", "gnostr"]
license = "MIT"

[features]
default = []

[dependencies]
aes = "0.8"
base64 = "0.21"
bech32 = "0.9"
cbc = { version = "0.1", features = [ "std" ] }
chacha20 = "0.9"
chacha20poly1305 = "0.10"
core-net = "0.1"
derive_more = "0.99"
hex = "0.4"
hmac = "0.12"
http = "0.2"
inout = "0.1.3"
lazy_static = "1.4"
lightning-invoice = "0.23"
linkify = "0.9"
nip44 = { package = "gnip44", git = "https://github.com/gnostr-org/gnip44", version = "0.1.1" }
num_cpus = "1"
pbkdf2 = { version = "0.12", default-features = false, features = [ "hmac", "sha2", "std" ] }
rand = "0.8"
rand_core = "0.6"
regex = "1.8"
scrypt = "0.11"
secp256k1 = { version = "0.28", features = [ "hashes", "global-context", "rand-std", "serde" ] }
serde = { version = "1.0", features = [ "derive" ] }
serde_json = "1.0"
sha2 = "0.10"
speedy = { git = "https://github.com/gnostr-org/speedy", version = "0.8.6", optional = true }
thiserror = "1.0"
thread-priority = "0.13"
url = "2.4"
zeroize = "1.6"

# Force scrypt to build with release-like speed even in dev mode
[profile.dev.package.scrypt]
opt-level = 3
debug-assertions = false
overflow-checks = false

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"

# Config for 'cargo dist'
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.21.1"
# CI backends to support
ci = "github"
# The installers to generate for each app
installers = ["shell", "powershell", "homebrew"]
# A GitHub repo to push Homebrew formulas to
tap = "gnostr-org/homebrew-gnostr-org"
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["aarch64-apple-darwin", "x86_64-apple-darwin", "x86_64-unknown-linux-gnu", "x86_64-unknown-linux-musl", "x86_64-pc-windows-msvc"]
# Path that installers should place binaries in
install-path = "CARGO_HOME"
# Publish jobs to run in CI
publish-jobs = ["homebrew"]
# Whether to install an updater program
install-updater = true
